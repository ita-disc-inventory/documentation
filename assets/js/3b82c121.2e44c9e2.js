"use strict";(self.webpackChunkita_inventory_docs=self.webpackChunkita_inventory_docs||[]).push([[2969],{4308:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"documentation-docs/project-structure/index","title":"Project Structure","description":"The ITA Inventory application follows a modern client-server architecture, with separate frontend and backend components. This page provides an overview of the project structure to help developers understand the codebase.","source":"@site/docs/documentation-docs/project-structure/index.md","sourceDirName":"documentation-docs/project-structure","slug":"/documentation-docs/project-structure/","permalink":"/documentation/documentation-docs/project-structure/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docs","previous":{"title":"Usage","permalink":"/documentation/documentation-docs/usage/"},"next":{"title":"Handoff Introduction","permalink":"/documentation/handoff-docs/introduction/"}}');var o=t(4848),s=t(8453);const i={sidebar_position:4},c="Project Structure",a={},d=[{value:"Root Directory Structure",id:"root-directory-structure",level:2},{value:"Frontend Structure",id:"frontend-structure",level:2},{value:"Backend Structure",id:"backend-structure",level:2},{value:"Documentation Structure",id:"documentation-structure",level:2},{value:"Key Files",id:"key-files",level:2},{value:"Frontend",id:"frontend",level:3},{value:"Backend",id:"backend",level:3},{value:"Database Schema",id:"database-schema",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"project-structure",children:"Project Structure"})}),"\n",(0,o.jsx)(n.p,{children:"The ITA Inventory application follows a modern client-server architecture, with separate frontend and backend components. This page provides an overview of the project structure to help developers understand the codebase."}),"\n",(0,o.jsx)(n.h2,{id:"root-directory-structure",children:"Root Directory Structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:".\n\u251c\u2500\u2500 frontend/            # React frontend application\n\u251c\u2500\u2500 backend/             # Node.js backend server\n\u2514\u2500\u2500 documentation/       # Project documentation (Docusaurus)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"frontend-structure",children:"Frontend Structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"frontend/\n\u251c\u2500\u2500 public/              # Static assets (Images, fonts, etc.)\n\u2502   \u251c\u2500\u2500 index.html       # HTML file serving as root entry point\n\u2502   \u2514\u2500\u2500 .png's...        # Assortment of pngs\n\u251c\u2500\u2500 src/                 # Source code\n\u2502   \u251c\u2500\u2500 App.jsx          # Main application component\n\u2502   \u251c\u2500\u2500 index.jsx        # Application entry point\n\u2502   \u251c\u2500\u2500 common/          # Shared components and utilities\n\u2502   \u2502   \u251c\u2500\u2500 components/  # Reusable components\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 form/    # Form components\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 navigation/  # Navigation components\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 table_pop_ups/  # Popup dialogs for order table\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 templates/  # Component templates\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 admin_modals/  # Admin-specific modals\n\u2502   \u2502   \u251c\u2500\u2500 contexts/    # Custom context providers for user authentication & placing orders\n\u2502   \u2502   \u2514\u2500\u2500 utils/       # Status & Program mappings, constants, etc.\n\u2502   \u2514\u2500\u2500 pages/           # Page components organized by routes\n\u2502       \u251c\u2500\u2500 account/     # Account/Profile pages\n\u2502       \u251c\u2500\u2500 admin/       # Admin-only pages\n\u2502       \u251c\u2500\u2500 Home/        # Home page\n\u2502       \u251c\u2500\u2500 not-found/   # 'Not Found' page, similar to 404\n\u2502       \u251c\u2500\u2500 settings/    # Settings page\n\u2514\u2500\u2500     \u251c\u2500\u2500 therapist/   # Therapist Home page\n"})}),"\n",(0,o.jsx)(n.h2,{id:"backend-structure",children:"Backend Structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"backend/\n\u251c\u2500\u2500 src/                  # Source code\n|   \u251c\u2500\u2500 config/           # Express application setup\n|   \u251c\u2500\u2500 controllers/      # Server entry point\n|   \u251c\u2500\u2500 middleware/       # Request handlers\n\u2502   \u251c\u2500\u2500 routes/           # API route definitions\n\u2502   \u2514\u2500\u2500 server.js         # Utility functions\n\u2514\u2500\u2500 README.md             # MDX doc for backend\n"})}),"\n",(0,o.jsx)(n.h2,{id:"documentation-structure",children:"Documentation Structure"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"documentation/\n\u251c\u2500\u2500 blog/                 # Responsible for publishing updates regarding ITA app\n\u251c\u2500\u2500 docs/                 # Holds all documentation sub-pages \n\u251c\u2500\u2500 src/                  # Contains components and styling used for docs site\n\u251c\u2500\u2500 static/               # Images used on docs site\n"})}),"\n",(0,o.jsx)(n.h2,{id:"key-files",children:"Key Files"}),"\n",(0,o.jsx)(n.h3,{id:"frontend",children:"Frontend"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"src/App.jsx"}),": Main application component that sets up routing"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"src/common/contexts/UserContext.jsx"}),": Manages user authentication state"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"src/common/contexts/OrderContext.jsx"}),": Manages order data and operations"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"src/common/components/OrderTable.jsx"}),": Central component for displaying orders"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"backend",children:"Backend"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"src/app.js"}),": Express application configuration"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"src/controllers/authController.js"}),": Authentication logic"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"src/controllers/orderController.js"}),": Order management logic"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"src/routes/index.js"}),": API route definitions"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"database-schema",children:"Database Schema"}),"\n",(0,o.jsx)(n.p,{children:"The application uses a PostgreSQL database with the following key tables:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"users"}),": Stores user information and credentials"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"orders"}),": Tracks order details and status"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"programs"}),": Manages program information and budgets"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"items"}),": Stores information about ordered items"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(6540);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);